import {
  ADD_RECIPE_STEPS,
  ADD_STEP,
  CLEAR_ERRORS_FOR_STEP,
  COMPONENT_SET_STATE,
  CREATE_PROJECT,
  DELETE_PROJECT,
  DISMISS_GLOBAL_DIALOG,
  DYNAMIC_DISPATCH_ACTION,
  GLOBAL_DIALOG,
  GLOBAL_ERROR,
  INTERCEPT_STEP,
  MODIFY_PROJECT,
  NEXT_STEP,
  PREV_STEP,
  QUERY_BACKEND,
  REMOVE_ALL_STEPS,
  REMOVE_STEP,
  REORDER_STEP,
  RESET_STEP,
  RFR_NO_STEPS,
  RFR_PROJECT_REPORT,
  RFR_PROJECT_ROOT,
  RFR_PROJECT_STEP,
  SAVE_CURRENT_PIPELINE_AS_RECIPE,
  SUBMIT_STEP,
  UPDATE_ADD_STEP_DIALOG,
  UPDATE_STEP_JUST_CHANGED_STATUS,
  UPDATE_WELCOME_DIALOG,
  UPLOAD_FILE,
} from '../constants';

export default {
  addRecipeSteps: (payload) => ({ type: ADD_RECIPE_STEPS, payload }),
  addStep: (payload) => ({ type: ADD_STEP, payload }),
  clearErrors: (payload) => ({ type: CLEAR_ERRORS_FOR_STEP, payload }),
  componentSetState: (payload) => ({ type: COMPONENT_SET_STATE, payload }),
  createProject: (payload) => ({ type: CREATE_PROJECT, payload }),
  deleteProject: (payload) => ({ type: DELETE_PROJECT, payload }),
  dismissGlobalDialog: (payload) => ({ type: DISMISS_GLOBAL_DIALOG, payload }),
  dynamicDispatchAction: (payload) => ({ type: DYNAMIC_DISPATCH_ACTION, payload }),
  globalDialog: (payload) => ({ type: GLOBAL_DIALOG, payload }),
  globalError: (payload) => ({ type: GLOBAL_ERROR, payload }),
  interceptStep: (payload) => ({ type: INTERCEPT_STEP, payload }),
  modifyProject: (payload) => ({ type: MODIFY_PROJECT, payload }),
  nextStep: (payload) => ({ type: NEXT_STEP, payload }),
  prevStep: (payload) => ({ type: PREV_STEP, payload }),
  queryBackend: (payload) => ({ type: QUERY_BACKEND, payload }),
  removeAllSteps: (payload) => ({ type: REMOVE_ALL_STEPS, payload }),
  removeStep: (payload) => ({ type: REMOVE_STEP, payload }),
  reorderStep: (payload) => ({ type: REORDER_STEP, payload }),
  resetStep: (payload) => ({ type: RESET_STEP, payload }),
  rfrNoSteps: (payload) => ({ type: RFR_NO_STEPS, payload }),
  rfrProjectReport: (payload) => ({ type: RFR_PROJECT_REPORT, payload }),
  rfrProjectRoot: (payload) => ({ type: RFR_PROJECT_ROOT, payload }),
  rfrProjectStep: (payload) => ({ type: RFR_PROJECT_STEP, payload }),
  saveCurrentPipelineAsRecipe: (payload) => ({ type: SAVE_CURRENT_PIPELINE_AS_RECIPE, payload }),
  submitStep: (payload) => ({ type: SUBMIT_STEP, payload }),
  updateAddStepDialog: (payload) => ({ type: UPDATE_ADD_STEP_DIALOG, payload }),
  updateStepJustChangedStatus: (payload) => ({ type: UPDATE_STEP_JUST_CHANGED_STATUS, payload }),
  updateWelcomeDialog: (payload) => ({ type: UPDATE_WELCOME_DIALOG, payload }),
  uploadFile: (payload) => ({ type: UPLOAD_FILE, payload }),
};
